{"version":3,"file":"static/webpack/static/development/pages/calendar.js.e3b2d0f6b6e06c258288.hot-update.js","sources":["webpack:///./components/DndColumn.js"],"sourcesContent":["import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport DndItem from './DndItem'\nimport styles from './DndColumn.module.scss'\nimport classNames from 'classnames/bind'\nconst cx = classNames.bind(styles)\n\nconst IQIYI = 'IQIYI'\nconst BILIBILI = 'BILIBILI'\nconst BANGUMI = 'BANGUMI'\nconst NAME_MAP = {\n  [IQIYI]: '爱奇艺',\n  [BILIBILI]: '哔哩哔哩动画',\n  [BANGUMI]: '番组计划'\n}\n\nconst Title = ({ title }) => {\n  switch (title) {\n    case BILIBILI:\n      return (\n        <span style={{ color: '#00a1d6' }}>\n          <em>from</em>\n          <i className=\"iconfont icon-bilibili-logo\" />\n        </span>\n      )\n    case IQIYI:\n      return (\n        <span style={{ color: '#00be06' }} className={cx('big-icon')}>\n          <em>from</em>\n          <i className=\"iconfont icon-aiqiyi\" />\n        </span>\n      )\n    default:\n      return (\n        <span style={{ color: '#fb7299' }}>\n          <em>from</em>\n          番组计划\n        </span>\n      )\n  }\n}\n\nconst DndColumn = memo(function DndColumn(props) {\n  const {\n    list,\n    listId,\n    title,\n    index,\n    isCombineEnabled = true,\n    onPreview,\n    ...rest\n  } = props\n  return (\n    <div {...rest} styleName=\"column-box\">\n      <h3 styleName=\"column-title\">\n        <Title title={title} />\n      </h3>\n      <Droppable\n        droppableId={listId}\n        index={index}\n        isCombineEnabled={isCombineEnabled}\n      >\n        {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            className={cx('column-body', {\n              'dragging-over': snapshot.isDraggingOver\n            })}\n            data-simplebar\n          >\n            {list.map((v, i) => (\n              <Draggable key={v.id} draggableId={v.id} index={i}>\n                {(dp, ds) => (\n                  <div\n                    ref={dp.innerRef}\n                    {...dp.dragHandleProps}\n                    {...dp.draggableProps}\n                    styleName=\"item-wrap\"\n                  >\n                    <DndItem\n                      isDraggingOver={Boolean(ds.combineTargetFor)}\n                      isDragging={ds.isDragging}\n                      {...v}\n                      onClick={() => onPreview(v)}\n                    />\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </div>\n  )\n})\n\nDndColumn.propTypes = {\n  list: PropTypes.array,\n  listId: PropTypes.string,\n  title: PropTypes.oneOf(Object.keys(NAME_MAP)),\n  index: PropTypes.number\n}\n\nexport default DndColumn\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAuBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AADA;AAGA;AACA;AADA;AAGA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AADA;AAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAFA;AAIA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAFA;AATA;AAkCA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;A","sourceRoot":""}